#!/bin/bash

# Renk ve bi√ßim tanƒ±mlarƒ±
RED='\033[1;31m'
BLUE='\033[0;34m'
BOLD='\033[1m'
RESET='\033[0m'
CYAN='\033[0;36m'

INSTALL_DIR="."
BROKER_CONFIG="./broker.toml"

# Yardƒ±mcƒ± fonksiyonlar
info() { echo -e "${BLUE}[INFO]${RESET} $1"; }
success() { echo -e "${CYAN}[OK]${RESET} $1"; }
prompt() { echo -en "${CYAN}$1${RESET}"; }

# Broker ayarlarƒ±nƒ± yapƒ±landƒ±r (G√úNCEL HAL)
configure_broker() {
    info "Broker ayarlarƒ± yapƒ±landƒ±rƒ±lƒ±yor..."

    # Eƒüer broker.toml yoksa, template'ten olu≈ütur
    if [[ ! -f "$BROKER_CONFIG" ]]; then
        cp "./boundless/broker-template.toml" "$BROKER_CONFIG"
        success "broker.toml olu≈üturuldu."
    else
        info "broker.toml zaten mevcut. Mevcut dosya √ºzerinden ayarlar yapƒ±lacak."
    fi

    while true; do
        clear
        echo -e "${RED}${BOLD}		‚öôÔ∏è BROKER AYARLARI ‚öôÔ∏è${RESET}"
        echo -e "L√ºtfen ayarƒ± se√ßiniz (√ßƒ±kmak i√ßin 'q' tu≈üuna basƒ±n):"
        echo -e "1) üîß mcycle_price"
        echo -e "2) ‚ö° peak_prove_khz"
        echo -e "3) üßÆ max_mcycle_limit"
        echo -e "4) ‚è≥ min_deadline"
        echo -e "5) üßµ max_concurrent_proofs"
        echo -e "6) üî• lockin_priority_gas"
        echo -e "7) üîô Geri d√∂n"

        read -rp "Se√ßiminiz: " choice

        case $choice in
            q|Q|7)
                info "Broker ayarlarƒ±ndan √ßƒ±kƒ±lƒ±yor..."
                break
                ;;
            1)
                prompt "üîß mcycle_price [varsayƒ±lan: 0.0000005, √ßƒ±kmak i√ßin 'q']: "
                read -r val
                if [[ "$val" == "q" ]]; then info "mcycle_price ayarƒ±ndan √ßƒ±kƒ±ldƒ±." ; else
                    val=${val:-0.0000005}
                    sed -i "s/mcycle_price = \"[^\"]*\"/mcycle_price = \"$val\"/" "$BROKER_CONFIG"
                    success "mcycle_price ba≈üarƒ±yla g√ºncellendi: $val"
                    read -n 1 -s -r -p "Devam etmek i√ßin bir tu≈üa basƒ±n..."
                fi
                ;;
            2)
                prompt "‚ö° peak_prove_khz [varsayƒ±lan: 100, √ßƒ±kmak i√ßin 'q']: "
                read -r val
                if [[ "$val" == "q" ]]; then info "peak_prove_khz ayarƒ±ndan √ßƒ±kƒ±ldƒ±." ; else
                    val=${val:-100}
                    sed -i "s/peak_prove_khz = [0-9]*/peak_prove_khz = $val/" "$BROKER_CONFIG"
                    success "peak_prove_khz ba≈üarƒ±yla g√ºncellendi: $val"
                    read -n 1 -s -r -p "Devam etmek i√ßin bir tu≈üa basƒ±n..."
                fi
                ;;
            3)
                prompt "üßÆ max_mcycle_limit [varsayƒ±lan: 8000, √ßƒ±kmak i√ßin 'q']: "
                read -r val
                if [[ "$val" == "q" ]]; then info "max_mcycle_limit ayarƒ±ndan √ßƒ±kƒ±ldƒ±." ; else
                    val=${val:-8000}
                    sed -i "s/max_mcycle_limit = [0-9]*/max_mcycle_limit = $val/" "$BROKER_CONFIG"
                    success "max_mcycle_limit ba≈üarƒ±yla g√ºncellendi: $val"
                    read -n 1 -s -r -p "Devam etmek i√ßin bir tu≈üa basƒ±n..."
                fi
                ;;
            4)
                prompt "‚è≥ min_deadline [varsayƒ±lan: 300, √ßƒ±kmak i√ßin 'q']: "
                read -r val
                if [[ "$val" == "q" ]]; then info "min_deadline ayarƒ±ndan √ßƒ±kƒ±ldƒ±." ; else
                    val=${val:-300}
                    sed -i "s/min_deadline = [0-9]*/min_deadline = $val/" "$BROKER_CONFIG"
                    success "min_deadline ba≈üarƒ±yla g√ºncellendi: $val"
                    read -n 1 -s -r -p "Devam etmek i√ßin bir tu≈üa basƒ±n..."
                fi
                ;;
            5)
                prompt "üßµ max_concurrent_proofs [varsayƒ±lan: 2, √ßƒ±kmak i√ßin 'q']: "
                read -r val
                if [[ "$val" == "q" ]]; then info "max_concurrent_proofs ayarƒ±ndan √ßƒ±kƒ±ldƒ±." ; else
                    val=${val:-2}
                    sed -i "s/max_concurrent_proofs = [0-9]*/max_concurrent_proofs = $val/" "$BROKER_CONFIG"
                    success "max_concurrent_proofs ba≈üarƒ±yla g√ºncellendi: $val"
                    read -n 1 -s -r -p "Devam etmek i√ßin bir tu≈üa basƒ±n..."
                fi
                ;;
            6)
                prompt "üî• lockin_priority_gas [varsayƒ±lan: 0, √ßƒ±kmak i√ßin 'q']: "
                read -r val
                if [[ "$val" == "q" ]]; then info "lockin_priority_gas ayarƒ±ndan √ßƒ±kƒ±ldƒ±." ; else
                    val=${val:-0}
                    if grep -q "^#lockin_priority_gas" "$BROKER_CONFIG"; then
                        sed -i "s/^#lockin_priority_gas.*/lockin_priority_gas = $val/" "$BROKER_CONFIG"
                    elif grep -q "^lockin_priority_gas" "$BROKER_CONFIG"; then
                        sed -i "s/^lockin_priority_gas.*/lockin_priority_gas = $val/" "$BROKER_CONFIG"
                    else
                        echo "lockin_priority_gas = $val" >> "$BROKER_CONFIG"
                    fi
                    success "lockin_priority_gas ba≈üarƒ±yla g√ºncellendi: $val"
                    read -n 1 -s -r -p "Devam etmek i√ßin bir tu≈üa basƒ±n..."
                fi
                ;;
            *)
                info "Ge√ßersiz se√ßim, l√ºtfen tekrar deneyin."
                ;;
        esac
    done
}
# Ana men√º
show_main_menu() {
    local options=("Broker Ayarlarƒ±")
    local selected=0

    while true; do
        clear
        echo -e "${RED}${BOLD}                   üçáüçáüçá BOUNDLESS MEN√ú üçáüçáüçá${RESET}\n"
        echo -e "${BLUE}Ok tu≈ülarƒ±yla gez, Enter ile se√ß, √ßƒ±kmak i√ßin 'q' tu≈üuna bas${RESET}\n"

        for i in "${!options[@]}"; do
            if [[ $i -eq $selected ]]; then
                echo -e " > ${CYAN}‚öôÔ∏è ${options[$i]}${RESET}"
            else
                echo "  ‚öôÔ∏è ${options[$i]}"
            fi
        done

        read -rsn1 key
        case "$key" in
            $'\x1b')
                read -rsn2 -t 0.1 key2
                case "$key2" in
                    '[A') ((selected--)) ;;
                    '[B') ((selected++)) ;;
                esac
                ;;
            '')  # Enter
                case $selected in
                    0) configure_broker ;;
                esac
                ;;
            q) exit 0 ;;
        esac

        ((selected < 0)) && selected=0
        ((selected >= ${#options[@]})) && selected=$((${#options[@]} - 1))
    done
}

# Ba≈ülat
show_main_menu
